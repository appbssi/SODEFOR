/**
 * @file Firestore Security Rules
 * @description This ruleset enforces a strict data-access model. All users can read all data. Only authenticated users can create, update, and delete.
 *
 * Data Structure:
 * - /personnel/{personnelId}: Stores personnel information.
 * - /attendance/{attendanceId}: Stores attendance records.
 * - /dailyStatus/{day}: Stores daily validation status.
 * - /missions/{missionId}: Stores mission details.
 *
 * Key Security Decisions:
 * - Public read access for all collections.
 * - Authenticated user required for write access (create, update, delete) to any collection.
 *
 * Denormalization for Authorization:
 * - Not applicable in this ruleset. Authentication is the sole requirement for write access.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows signed-in users to read, create, update, or delete personnel data.
     * @path /personnel/{personnelId}
     * @allow (get, list, create, update, delete): if isSignedIn()
     * @deny (get, list, create, update, delete): if !isSignedIn()
     * @principle Restricts all access to authenticated users.
     */
    match /personnel/{personnelId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Allows signed-in users to read, create, update, or delete attendance data.
     * @path /attendance/{attendanceId}
     * @allow (get, list, create, update, delete): if isSignedIn()
     * @deny (get, list, create, update, delete): if !isSignedIn()
     * @principle Restricts all access to authenticated users.
     */
    match /attendance/{attendanceId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Allows signed-in users to read, create, update, or delete daily status data.
     * @path /dailyStatus/{day}
     * @allow (get, list, create, update, delete): if isSignedIn()
     * @deny (get, list, create, update, delete): if !isSignedIn()
     * @principle Restricts all access to authenticated users.
     */
    match /dailyStatus/{day} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Allows signed-in users to read, create, update, or delete mission data.
     * @path /missions/{missionId}
     * @allow (get, list, create, update, delete): if isSignedIn()
     * @deny (get, list, create, update, delete): if !isSignedIn()
     * @principle Restricts all access to authenticated users.
     */
    match /missions/{missionId} {
      allow read, write: if isSignedIn();
    }

    /**
     * @description Helper function to check if a user is signed in.
     * @return {boolean} True if the user is signed in, false otherwise.
     */
    function isSignedIn() {
      return request.auth != null;
    }
  }
}
