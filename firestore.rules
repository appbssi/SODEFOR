/**
 * @file Firestore Security Rules
 * @version 2
 *
 * @description
 * This ruleset enforces a public read policy on the 'personnel', 'attendance', and 'dailyStatus' collections,
 * while restricting writes to authenticated users only. The system is designed to allow open access for
 * retrieving data but secures modifications to prevent unauthorized changes.
 *
 * Data Structure:
 * - /personnel/{personnelId}: Stores personnel information.
 * - /attendance/{attendanceId}: Stores attendance records.
 * - /dailyStatus/{day}: Stores daily status information.
 *
 * Key Security Decisions:
 * - Public Read Access: The 'get' and 'list' operations are allowed for all users, including unauthenticated ones.
 * - Authenticated Writes Only: 'create', 'update', and 'delete' operations are restricted to authenticated users.
 * - No Data Validation: Data validation is skipped to allow rapid iteration and flexible data shapes during prototyping.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows public read access to personnel data, but restricts write access to authenticated users.
     * @path /personnel/{personnelId}
     * @allow (get, list): Any user can read personnel data.
     * @allow (create, update, delete): Only authenticated users can modify personnel data.
     * @deny (create, update, delete): Unauthenticated users cannot modify personnel data.
     * @principle Allows open data retrieval while securing data modification.
     */
    match /personnel/{personnelId} {
      allow get: if true;
      allow list: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource != null;
      allow delete: if isSignedIn() && resource != null;
    }

    /**
     * @description Allows public read access to attendance records, but restricts write access to authenticated users.
     * @path /attendance/{attendanceId}
     * @allow (get, list): Any user can read attendance records.
     * @allow (create, update, delete): Only authenticated users can modify attendance records.
     * @deny (create, update, delete): Unauthenticated users cannot modify attendance records.
     * @principle Allows open data retrieval while securing data modification.
     */
    match /attendance/{attendanceId} {
      allow get: if true;
      allow list: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource != null;
      allow delete: if isSignedIn() && resource != null;
    }

    /**
     * @description Allows public read access to daily status information, but restricts write access to authenticated users.
     * @path /dailyStatus/{day}
     * @allow (get, list): Any user can read daily status information.
     * @allow (create, update, delete): Only authenticated users can modify daily status information.
     * @deny (create, update, delete): Unauthenticated users cannot modify daily status information.
     * @principle Allows open data retrieval while securing data modification.
     */
    match /dailyStatus/{day} {
      allow get: if true;
      allow list: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource != null;
      allow delete: if isSignedIn() && resource != null;
    }

    function isSignedIn() {
      return request.auth != null;
    }
  }
}